/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@/http/client'
import type { RequestConfig, ResponseErrorConfig } from '@/http/client'
import type {
  PostProductsUpload400Type,
  PostProductsUpload401Type,
  PostProductsUploadMutationRequestType,
  PostProductsUploadMutationResponseType,
} from '../types/ProdutosTypes/PostProductsUploadType.ts'

function getPostProductsUploadUrl() {
  return '/products/upload' as const
}

/**
 * @description Esta rota requer autenticação através de um token JWT válido. Permite o upload de uma imagem para um produto através de uma requisição multipart/form-data. A imagem deve ser enviada como um arquivo no formato JPG, PNG ou WEBP, com tamanho máximo de 5MB. O sistema processará automaticamente a imagem, otimizando-a para uso no sistema e armazenando-a de forma segura. A resposta incluirá a URL da imagem após o upload bem-sucedido. Em caso de falha no upload ou formato inválido, será retornado um erro apropriado.
 * @summary Upload de uma imagem para um produto.
 * {@link /products/upload}
 */
export async function postProductsUpload(
  data?: PostProductsUploadMutationRequestType,
  config: Partial<RequestConfig<PostProductsUploadMutationRequestType>> & {
    client?: typeof client
  } = {}
) {
  const { client: request = client, ...requestConfig } = config

  const formData = new FormData()
  if (data) {
    Object.keys(data).forEach(key => {
      const value = data[key as keyof typeof data]
      if (
        typeof key === 'string' &&
        (typeof value === 'string' || (value as Blob) instanceof Blob)
      ) {
        formData.append(key, value as unknown as string)
      }
    })
  }
  const res = await request<
    PostProductsUploadMutationResponseType,
    ResponseErrorConfig<PostProductsUpload400Type | PostProductsUpload401Type>,
    PostProductsUploadMutationRequestType
  >({
    method: 'POST',
    url: getPostProductsUploadUrl().toString(),
    data: formData,
    ...requestConfig,
    headers: {
      'Content-Type': 'multipart/form-data',
      ...requestConfig.headers,
    },
  })
  return res.data
}
