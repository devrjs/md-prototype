/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@/http/client'
import type { RequestConfig, ResponseErrorConfig } from '@/http/client'
import type {
  PutProductsIdMutationRequestType,
  PutProductsIdMutationResponseType,
  PutProductsIdPathParamsType,
  PutProductsId401Type,
  PutProductsId404Type,
} from '../types/ProdutosTypes/PutProductsIdType'

function getPutProductsIdUrl(id: PutProductsIdPathParamsType['id']) {
  return `/products/${id}` as const
}

/**
 * @description Esta rota requer autenticação através de um token JWT válido. Permite a atualização das informações de um produto específico identificado pelo ID fornecido nos parâmetros da URL. Os dados a serem atualizados devem ser enviados no corpo da requisição (request body) seguindo o schema de validação definido. É possível atualizar um ou mais campos do produto, incluindo nome, descrição, preço e categoria. O sistema validará automaticamente todos os dados enviados antes de realizar a atualização. Caso o produto não seja encontrado, será retornado um erro apropriado.
 * @summary Altera as informações de um produto específico.
 * {@link /products/:id}
 */
export async function putProductsId(
  id: PutProductsIdPathParamsType['id'],
  data: PutProductsIdMutationRequestType,
  config: Partial<RequestConfig<PutProductsIdMutationRequestType>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    PutProductsIdMutationResponseType,
    ResponseErrorConfig<PutProductsId401Type | PutProductsId404Type>,
    PutProductsIdMutationRequestType
  >({ method: 'PUT', url: getPutProductsIdUrl(id).toString(), data, ...requestConfig })
  return res.data
}