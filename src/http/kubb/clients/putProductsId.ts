/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from './src/http/client.ts'
import type { RequestConfig, ResponseErrorConfig } from './src/http/client.ts'
import type {
  PutProductsIdMutationRequest,
  PutProductsIdMutationResponse,
  PutProductsIdPathParams,
  PutProductsId401,
  PutProductsId404,
} from '../types/PutProductsId.ts'

function getPutProductsIdUrl({ id }: { id: PutProductsIdPathParams['id'] }) {
  return `http://localhost:3333/products/${id}` as const
}

/**
 * @description Esta rota requer autenticação através de um token JWT válido. Permite a atualização das informações de um produto específico identificado pelo ID fornecido nos parâmetros da URL. Os dados a serem atualizados devem ser enviados no corpo da requisição (request body) seguindo o schema de validação definido. É possível atualizar um ou mais campos do produto, incluindo nome, descrição, preço e categoria. O sistema validará automaticamente todos os dados enviados antes de realizar a atualização. Caso o produto não seja encontrado, será retornado um erro apropriado.
 * @summary Altera as informações de um produto específico.
 * {@link /products/:id}
 */
export async function putProductsId(
  { id, data }: { id: PutProductsIdPathParams['id']; data: PutProductsIdMutationRequest },
  config: Partial<RequestConfig<PutProductsIdMutationRequest>> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<PutProductsIdMutationResponse, ResponseErrorConfig<PutProductsId401 | PutProductsId404>, PutProductsIdMutationRequest>({
    method: 'PUT',
    url: getPutProductsIdUrl({ id }).toString(),
    data,
    ...requestConfig,
  })
  return res.data
}