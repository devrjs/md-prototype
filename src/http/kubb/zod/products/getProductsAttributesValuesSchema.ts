/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'
import type {
  GetProductsAttributesValues200Type,
  GetProductsAttributesValues401Type,
  GetProductsAttributesValuesQueryParamsType,
  GetProductsAttributesValuesQueryResponseType,
} from '../../types/Produtos (Atributos)Types/GetProductsAttributesValuesType.ts'

export const getProductsAttributesValuesQueryParamsSchema = z.object({
  productAttributeNameId: z.string(),
  perPage: z.number().default(10),
  pageIndex: z.number().default(0),
  orderBy: z.enum(['desc', 'asc']).default('desc'),
  attributeValue: z.string().optional(),
}) as unknown as ToZod<GetProductsAttributesValuesQueryParamsType>

/**
 * @description Valores dos atributos dos produtos obtidos com sucesso.
 */
export const getProductsAttributesValues200Schema = z
  .object({
    totalCount: z.number(),
    pageCount: z.number(),
    productAttributeValues: z.array(
      z.object({
        id: z.string(),
        value: z.string(),
      })
    ),
  })
  .describe(
    'Valores dos atributos dos produtos obtidos com sucesso.'
  ) as unknown as ToZod<GetProductsAttributesValues200Type>

/**
 * @description Usuário não autenticado.
 */
export const getProductsAttributesValues401Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Usuário não autenticado.'
  ) as unknown as ToZod<GetProductsAttributesValues401Type>

export const getProductsAttributesValuesQueryResponseSchema = z.lazy(
  () => getProductsAttributesValues200Schema
) as unknown as ToZod<GetProductsAttributesValuesQueryResponseType>
