/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import type {
  PutProductsIdPathParamsType,
  PutProductsId200Type,
  PutProductsId401Type,
  PutProductsId404Type,
  PutProductsIdMutationRequestType,
  PutProductsIdMutationResponseType,
} from '../../types/products/PutProductsIdType'
import { z } from 'zod'

export const putProductsIdPathParamsSchema = z.object({
  id: z.string(),
}) as unknown as ToZod<PutProductsIdPathParamsType>

/**
 * @description Produto atualizado com sucesso.
 */
export const putProductsId200Schema = z.enum(['null']).describe('Produto atualizado com sucesso.').nullable() as unknown as ToZod<PutProductsId200Type>

/**
 * @description Usuário não autenticado.
 */
export const putProductsId401Schema = z
  .object({
    message: z.string(),
  })
  .describe('Usuário não autenticado.') as unknown as ToZod<PutProductsId401Type>

/**
 * @description Produto, marca ou fornecedor não encontrado.
 */
export const putProductsId404Schema = z
  .object({
    message: z.string(),
  })
  .describe('Produto, marca ou fornecedor não encontrado.') as unknown as ToZod<PutProductsId404Type>

export const putProductsIdMutationRequestSchema = z.object({
  supplier_id: z.string().optional(),
  product_measurement_unit_id: z.string().optional(),
  product_brand_id: z.string().optional(),
  product_category_ids: z
    .array(
      z.object({
        id: z.string(),
      }),
    )
    .optional(),
  reference_code: z.string().min(1),
  name: z.string().min(1),
  model: z.string().optional(),
  description: z.string().optional(),
  ncm: z.number().int().optional(),
  cfop: z.number().int().optional(),
  cest: z.string().optional(),
  merchandise_origin: z.string().optional(),
}) as unknown as ToZod<PutProductsIdMutationRequestType>

export const putProductsIdMutationResponseSchema = z.lazy(() => putProductsId200Schema) as unknown as ToZod<PutProductsIdMutationResponseType>