/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'
import type {
  PostProducts201Type,
  PostProducts401Type,
  PostProducts404Type,
  PostProductsMutationRequestType,
  PostProductsMutationResponseType,
} from '../../types/ProdutosTypes/PostProductsType'

/**
 * @description Produto cadastrado com sucesso.
 */
export const postProducts201Schema = z
  .enum(['null'])
  .describe('Produto cadastrado com sucesso.')
  .nullable() as unknown as ToZod<PostProducts201Type>

/**
 * @description Usuário não autenticado.
 */
export const postProducts401Schema = z
  .object({
    message: z.string(),
  })
  .describe('Usuário não autenticado.') as unknown as ToZod<PostProducts401Type>

/**
 * @description Fornecedor, marca, categoria ou unidade comercial não encontrado.
 */
export const postProducts404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Fornecedor, marca, categoria ou unidade comercial não encontrado.'
  ) as unknown as ToZod<PostProducts404Type>

export const postProductsMutationRequestSchema = z.object({
  supplier_id: z.string().optional(),
  product_measurement_unit_id: z.string().optional(),
  product_brand_id: z.string(),
  product_category_ids: z
    .array(
      z.object({
        id: z.string(),
      })
    )
    .optional(),
  reference_code: z.string().min(1),
  name: z.string().min(1),
  model: z.string().optional(),
  description: z.string().optional(),
  ncm: z.number().int().optional(),
  cfop: z.number().int().optional(),
  cest: z.string().optional(),
  merchandise_origin: z.string().optional(),
}) as unknown as ToZod<PostProductsMutationRequestType>

export const postProductsMutationResponseSchema = z.lazy(
  () => postProducts201Schema
) as unknown as ToZod<PostProductsMutationResponseType>
