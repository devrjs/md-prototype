/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import type {
  PostCustomers201Type,
  PostCustomers401Type,
  PostCustomers409Type,
  PostCustomersMutationRequestType,
  PostCustomersMutationResponseType,
} from '../../types/ClientesTypes/PostCustomersType.ts'
import { z } from 'zod'

/**
 * @description Cliente cadastrado com sucesso.
 */
export const postCustomers201Schema = z
  .enum(['null'])
  .describe('Cliente cadastrado com sucesso.')
  .nullable() as unknown as ToZod<PostCustomers201Type>

/**
 * @description Usuário não autenticado.
 */
export const postCustomers401Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Usuário não autenticado.'
  ) as unknown as ToZod<PostCustomers401Type>

/**
 * @description Cliente já cadastrado.
 */
export const postCustomers409Schema = z
  .object({
    message: z.string(),
  })
  .describe('Cliente já cadastrado.') as unknown as ToZod<PostCustomers409Type>

export const postCustomersMutationRequestSchema = z.object({
  name: z.string().min(1),
  phone: z.string().min(1),
  phone_2: z.string().optional(),
  document_type: z.enum(['PERSON', 'COMPANY']),
  document: z.string().min(1),
  document_2: z.string().optional(),
  email: z.string().email().min(1),
  state_registration: z.string().optional(),
  tax_free: z.boolean().optional(),
  gender: z.enum(['MALE', 'FEMALE']).optional(),
  birth_date: z.string().datetime({ offset: true }).optional(),
  problematic: z.boolean().optional(),
  recipient_name: z.string().min(1),
  recipient_phone: z.string().min(1),
  cep: z.string().min(1),
  street: z.string().min(1),
  number: z.string().min(1),
  complement: z.string().optional(),
  neighborhood: z.string().min(1),
  city: z.string().min(1),
  state: z.string().min(1),
}) as unknown as ToZod<PostCustomersMutationRequestType>

export const postCustomersMutationResponseSchema = z.lazy(
  () => postCustomers201Schema
) as unknown as ToZod<PostCustomersMutationResponseType>
