/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'
import type {
  GetEmployees200Type,
  GetEmployees401Type,
  GetEmployees404Type,
  GetEmployeesQueryParamsType,
  GetEmployeesQueryResponseType,
} from '../../types/ColaboradoresTypes/GetEmployeesType'

export const getEmployeesQueryParamsSchema = z
  .object({
    perPage: z.number().default(10),
    pageIndex: z.number().default(0),
    orderBy: z.enum(['desc', 'asc']).default('desc'),
    employeeName: z.string().optional(),
    employeeDocument: z.string().optional(),
  })
  .optional() as unknown as ToZod<GetEmployeesQueryParamsType>

/**
 * @description Colaboradores obtidos com sucesso.
 */
export const getEmployees200Schema = z
  .object({
    totalCount: z.number(),
    pageCount: z.number(),
    employees: z.array(
      z.object({
        id: z.string(),
        name: z.string(),
        document_type: z.enum(['PERSON', 'COMPANY']),
        document: z.string(),
        user_id: z.string(),
        entry_number: z.number(),
        person_id: z.string(),
      })
    ),
  })
  .describe(
    'Colaboradores obtidos com sucesso.'
  ) as unknown as ToZod<GetEmployees200Type>

/**
 * @description Usuário não autenticado.
 */
export const getEmployees401Schema = z
  .object({
    message: z.string(),
  })
  .describe('Usuário não autenticado.') as unknown as ToZod<GetEmployees401Type>

/**
 * @description Colaborador não encontrado.
 */
export const getEmployees404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Colaborador não encontrado.'
  ) as unknown as ToZod<GetEmployees404Type>

export const getEmployeesQueryResponseSchema = z.lazy(
  () => getEmployees200Schema
) as unknown as ToZod<GetEmployeesQueryResponseType>
