/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import type {
  PutEmployeesIdPathParamsType,
  PutEmployeesId200Type,
  PutEmployeesId401Type,
  PutEmployeesId404Type,
  PutEmployeesIdMutationRequestType,
  PutEmployeesIdMutationResponseType,
} from '../../types/employees/PutEmployeesIdType'
import { z } from 'zod'

export const putEmployeesIdPathParamsSchema = z.object({
  id: z.string(),
}) as unknown as ToZod<PutEmployeesIdPathParamsType>

/**
 * @description Colaborador atualizado com sucesso.
 */
export const putEmployeesId200Schema = z.enum(['null']).describe('Colaborador atualizado com sucesso.').nullable() as unknown as ToZod<PutEmployeesId200Type>

/**
 * @description Usuário não autenticado.
 */
export const putEmployeesId401Schema = z
  .object({
    message: z.string(),
  })
  .describe('Usuário não autenticado.') as unknown as ToZod<PutEmployeesId401Type>

/**
 * @description Colaborador não encontrado.
 */
export const putEmployeesId404Schema = z
  .object({
    message: z.string(),
  })
  .describe('Colaborador não encontrado.') as unknown as ToZod<PutEmployeesId404Type>

export const putEmployeesIdMutationRequestSchema = z.object({
  name: z.string().min(1),
  phone: z.string().min(1),
  phone_2: z.string().optional(),
  document_type: z.enum(['PERSON', 'COMPANY']),
  document: z.string().min(1),
  document_2: z.string().optional(),
  email: z.string().email().min(1),
  state_registration: z.string().optional(),
  tax_free: z.boolean().optional(),
  gender: z.enum(['MALE', 'FEMALE']).optional(),
  birth_date: z.string().datetime({ offset: true }).optional(),
  address_id: z
    .string()
    .regex(/^[cC][^\s-]{8,}$/)
    .min(1),
  recipient_name: z.string().min(1),
  recipient_phone: z.string().min(1),
  cep: z.string().min(1),
  street: z.string().min(1),
  number: z.string().min(1),
  complement: z.string().optional(),
  neighborhood: z.string().min(1),
  city: z.string().min(1),
  state: z.string().min(1),
}) as unknown as ToZod<PutEmployeesIdMutationRequestType>

export const putEmployeesIdMutationResponseSchema = z.lazy(() => putEmployeesId200Schema) as unknown as ToZod<PutEmployeesIdMutationResponseType>