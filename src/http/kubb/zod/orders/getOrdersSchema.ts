/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'
import type {
  GetOrders200Type,
  GetOrdersQueryParamsType,
  GetOrdersQueryResponseType,
} from '../../types/PedidosTypes/GetOrdersType'

export const getOrdersQueryParamsSchema = z
  .object({
    perPage: z.string().default('10'),
    pageIndex: z.string().default('0'),
    orderBy: z.enum(['asc', 'desc']).default('desc'),
    status: z.enum(['PROCESSED', 'CANCELLED']).optional(),
    orderId: z.string().optional(),
    platformOrderId: z.string().optional(),
    timeFrom: z.string().datetime({ offset: true }).optional(),
    timeTo: z.string().datetime({ offset: true }).optional(),
  })
  .optional() as unknown as ToZod<GetOrdersQueryParamsType>

/**
 * @description Default Response
 */
export const getOrders200Schema = z.object({
  totalCount: z.number(),
  pageCount: z.number(),
  orders: z.array(
    z.object({
      id: z.string(),
      status: z.string(),
      shipping_carrier: z.string(),
      order_placed_at: z.string().datetime({ offset: true }),
      created_at: z.string().datetime({ offset: true }),
      updated_at: z.string().datetime({ offset: true }),
    })
  ),
}) as unknown as ToZod<GetOrders200Type>

export const getOrdersQueryResponseSchema = z.lazy(
  () => getOrders200Schema
) as unknown as ToZod<GetOrdersQueryResponseType>
