/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import type { GetOrdersQueryParamsType, GetOrders200Type, GetOrders401Type, GetOrdersQueryResponseType } from '../../types/orders/GetOrdersType'
import { z } from 'zod'

export const getOrdersQueryParamsSchema = z
  .object({
    perPage: z.number().default(10),
    pageIndex: z.number().min(1).default(1),
    orderBy: z.enum(['asc', 'desc']).default('desc'),
    status: z.enum(['PROCESSED', 'CANCELLED']).optional(),
    orderId: z.string().optional(),
    platformOrderId: z.string().optional(),
    timeFrom: z.string().datetime({ offset: true }).optional(),
    timeTo: z.string().datetime({ offset: true }).optional(),
  })
  .optional() as unknown as ToZod<GetOrdersQueryParamsType>

/**
 * @description Default Response
 */
export const getOrders200Schema = z.object({
  totalCount: z.number(),
  pageCount: z.number(),
  orders: z.array(
    z.object({
      id: z.string(),
      status: z.string(),
      shipping_carrier: z.string(),
      order_placed_at: z.string().datetime({ offset: true }),
      created_at: z.string().datetime({ offset: true }),
      updated_at: z.string().datetime({ offset: true }),
      platform_order_details: z
        .object({
          platform_name: z.enum(['SHOPEE', 'MERCADO_LIVRE', 'TRAY', 'LOCAL']),
          external_order_id: z.string(),
        })
        .nullable(),
    }),
  ),
}) as unknown as ToZod<GetOrders200Type>

/**
 * @description Usuário não autenticado.
 */
export const getOrders401Schema = z
  .object({
    message: z.string(),
  })
  .describe('Usuário não autenticado.') as unknown as ToZod<GetOrders401Type>

export const getOrdersQueryResponseSchema = z.lazy(() => getOrders200Schema) as unknown as ToZod<GetOrdersQueryResponseType>