/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import type {
  PostOrders201Type,
  PostOrders400Type,
  PostOrders401Type,
  PostOrders404Type,
  PostOrdersMutationRequestType,
  PostOrdersMutationResponseType,
} from '../../types/PedidosTypes/PostOrdersType.ts'
import { z } from 'zod'

/**
 * @description Pedido criado com sucesso.
 */
export const postOrders201Schema = z.enum(['null']).describe('Pedido criado com sucesso.').nullable() as unknown as ToZod<PostOrders201Type>

/**
 * @description Dados inválidos.
 */
export const postOrders400Schema = z
  .object({
    message: z.string(),
  })
  .describe('Dados inválidos.') as unknown as ToZod<PostOrders400Type>

/**
 * @description Usuário não autenticado.
 */
export const postOrders401Schema = z
  .object({
    message: z.string(),
  })
  .describe('Usuário não autenticado.') as unknown as ToZod<PostOrders401Type>

/**
 * @description Cliente ou Endereço não encontrado.
 */
export const postOrders404Schema = z
  .object({
    message: z.string(),
  })
  .describe('Cliente ou Endereço não encontrado.') as unknown as ToZod<PostOrders404Type>

export const postOrdersMutationRequestSchema = z.object({
  customer_id: z.string().min(1),
  address_id: z.string().min(1),
  status: z.enum(['PROCESSED', 'CANCELLED']).default('PROCESSED'),
  shipping_carrier: z.enum(['CORREIOS', 'JADLOG']).default('CORREIOS'),
  payment_method: z.enum(['CREDIT_CARD', 'DEBIT_CARD', 'PIX']),
  shipping_cost: z.number().min(0).default(0),
  items: z
    .array(
      z.object({
        product_variation_id: z.string().min(1),
        quantity: z.number().min(1),
        discount: z.number().min(0),
      }),
    )
    .min(1),
}) as unknown as ToZod<PostOrdersMutationRequestType>

export const postOrdersMutationResponseSchema = z.lazy(() => postOrders201Schema) as unknown as ToZod<PostOrdersMutationResponseType>