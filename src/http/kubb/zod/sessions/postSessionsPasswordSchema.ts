/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import type {
  PostSessionsPassword200Type,
  PostSessionsPassword400Type,
  PostSessionsPasswordMutationRequestType,
  PostSessionsPasswordMutationResponseType,
} from '../../types/sessions/PostSessionsPasswordType'
import { z } from 'zod'

/**
 * @description Usuário autenticado com sucesso.
 */
export const postSessionsPassword200Schema = z
  .object({
    access_token: z.string(),
    refresh_token: z.string(),
  })
  .describe('Usuário autenticado com sucesso.') as unknown as ToZod<PostSessionsPassword200Type>

/**
 * @description E-mail ou senha incorretos.
 */
export const postSessionsPassword400Schema = z
  .object({
    message: z.string(),
  })
  .describe('E-mail ou senha incorretos.') as unknown as ToZod<PostSessionsPassword400Type>

export const postSessionsPasswordMutationRequestSchema = z.object({
  email: z.string().email().min(1),
  password: z.string().min(6),
}) as unknown as ToZod<PostSessionsPasswordMutationRequestType>

export const postSessionsPasswordMutationResponseSchema = z.lazy(
  () => postSessionsPassword200Schema,
) as unknown as ToZod<PostSessionsPasswordMutationResponseType>