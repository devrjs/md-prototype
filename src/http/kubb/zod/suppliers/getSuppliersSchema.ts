/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import type {
  GetSuppliersQueryParamsType,
  GetSuppliers200Type,
  GetSuppliers401Type,
  GetSuppliers404Type,
  GetSuppliersQueryResponseType,
} from '../../types/suppliers/GetSuppliersType'
import { z } from 'zod'

export const getSuppliersQueryParamsSchema = z
  .object({
    perPage: z.number().default(10),
    pageIndex: z.number().default(0),
    orderBy: z.enum(['desc', 'asc']).default('desc'),
    supplierName: z.string().optional(),
    supplierDocument: z.string().optional(),
  })
  .optional() as unknown as ToZod<GetSuppliersQueryParamsType>

/**
 * @description Fornecedores obtidos com sucesso.
 */
export const getSuppliers200Schema = z
  .object({
    totalCount: z.number(),
    pageCount: z.number(),
    suppliers: z.array(
      z.object({
        id: z.string(),
        name: z.string(),
        document_type: z.enum(['PERSON', 'COMPANY']),
        document: z.string(),
        user_id: z.string(),
        entry_number: z.number(),
        person_id: z.string(),
      }),
    ),
  })
  .describe('Fornecedores obtidos com sucesso.') as unknown as ToZod<GetSuppliers200Type>

/**
 * @description Usuário não autenticado.
 */
export const getSuppliers401Schema = z
  .object({
    message: z.string(),
  })
  .describe('Usuário não autenticado.') as unknown as ToZod<GetSuppliers401Type>

/**
 * @description Fornecedor não encontrado.
 */
export const getSuppliers404Schema = z
  .object({
    message: z.string(),
  })
  .describe('Fornecedor não encontrado.') as unknown as ToZod<GetSuppliers404Type>

export const getSuppliersQueryResponseSchema = z.lazy(() => getSuppliers200Schema) as unknown as ToZod<GetSuppliersQueryResponseType>