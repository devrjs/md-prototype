/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import type {
  DeleteSuppliersIdPathParamsType,
  DeleteSuppliersId200Type,
  DeleteSuppliersId401Type,
  DeleteSuppliersId404Type,
  DeleteSuppliersIdMutationResponseType,
} from '../../types/FornecedoresTypes/DeleteSuppliersIdType'
import { z } from 'zod'

export const deleteSuppliersIdPathParamsSchema = z.object({
  id: z.string(),
}) as unknown as ToZod<DeleteSuppliersIdPathParamsType>

/**
 * @description Fornecedor deletado com sucesso.
 */
export const deleteSuppliersId200Schema = z.enum(['null']).describe('Fornecedor deletado com sucesso.').nullable() as unknown as ToZod<DeleteSuppliersId200Type>

/**
 * @description Usuário não autenticado.
 */
export const deleteSuppliersId401Schema = z
  .object({
    message: z.string(),
  })
  .describe('Usuário não autenticado.') as unknown as ToZod<DeleteSuppliersId401Type>

/**
 * @description Fornecedor não encontrado.
 */
export const deleteSuppliersId404Schema = z
  .object({
    message: z.string(),
  })
  .describe('Fornecedor não encontrado.') as unknown as ToZod<DeleteSuppliersId404Type>

export const deleteSuppliersIdMutationResponseSchema = z.lazy(() => deleteSuppliersId200Schema) as unknown as ToZod<DeleteSuppliersIdMutationResponseType>