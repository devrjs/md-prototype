/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import type {
  PostSuppliers201Type,
  PostSuppliers401Type,
  PostSuppliers409Type,
  PostSuppliersMutationRequestType,
  PostSuppliersMutationResponseType,
} from '../../types/FornecedoresTypes/PostSuppliersType.ts'
import { z } from 'zod'

/**
 * @description Fornecedor cadastrado com sucesso.
 */
export const postSuppliers201Schema = z
  .enum(['null'])
  .describe('Fornecedor cadastrado com sucesso.')
  .nullable() as unknown as ToZod<PostSuppliers201Type>

/**
 * @description Usuário não autenticado.
 */
export const postSuppliers401Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Usuário não autenticado.'
  ) as unknown as ToZod<PostSuppliers401Type>

/**
 * @description Fornecedor já cadastrado.
 */
export const postSuppliers409Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Fornecedor já cadastrado.'
  ) as unknown as ToZod<PostSuppliers409Type>

export const postSuppliersMutationRequestSchema = z.object({
  name: z.string().min(1),
  phone: z.string().min(1),
  phone_2: z.string().optional(),
  document_type: z.enum(['PERSON', 'COMPANY']),
  document: z.string().min(1),
  document_2: z.string().optional(),
  email: z.string().email().min(1),
  state_registration: z.string().optional(),
  tax_free: z.boolean().optional(),
  recipient_name: z.string().min(1),
  recipient_phone: z.string().min(1),
  cep: z.string().min(1),
  street: z.string().min(1),
  number: z.string().min(1),
  complement: z.string().optional(),
  neighborhood: z.string().min(1),
  city: z.string().min(1),
  state: z.string().min(1),
}) as unknown as ToZod<PostSuppliersMutationRequestType>

export const postSuppliersMutationResponseSchema = z.lazy(
  () => postSuppliers201Schema
) as unknown as ToZod<PostSuppliersMutationResponseType>
