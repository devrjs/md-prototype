/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'
import type {
  GetSuppliersId200Type,
  GetSuppliersId401Type,
  GetSuppliersId404Type,
  GetSuppliersIdPathParamsType,
  GetSuppliersIdQueryResponseType,
} from '../../types/FornecedoresTypes/GetSuppliersIdType.ts'

export const getSuppliersIdPathParamsSchema = z.object({
  id: z.string(),
}) as unknown as ToZod<GetSuppliersIdPathParamsType>

/**
 * @description Fornecedor obtido com sucesso.
 */
export const getSuppliersId200Schema = z
  .object({
    id: z.string(),
    name: z.string(),
    phone: z.string(),
    phone_2: z.string().nullable(),
    document_type: z.enum(['PERSON', 'COMPANY']),
    document: z.string(),
    document_2: z.string().nullable(),
    email: z.string().email().nullable(),
    state_registration: z.string().nullable(),
    tax_free: z.boolean(),
    created_at: z.string().datetime({ offset: true }),
    updated_at: z.string().datetime({ offset: true }),
    user_id: z.string(),
    entry_number: z.number(),
    person_id: z.string(),
    addresses: z.array(
      z.object({
        number: z.string(),
        id: z.string(),
        created_at: z.string().datetime({ offset: true }),
        updated_at: z.string().datetime({ offset: true }),
        recipient_name: z.string(),
        recipient_phone: z.string(),
        cep: z.string(),
        street: z.string(),
        complement: z.string().nullable(),
        neighborhood: z.string(),
        city: z.string(),
        state: z.string(),
        platform: z.enum(['SHOPEE', 'MERCADO_LIVRE', 'TRAY', 'LOCAL']),
      })
    ),
  })
  .describe(
    'Fornecedor obtido com sucesso.'
  ) as unknown as ToZod<GetSuppliersId200Type>

/**
 * @description Usuário não autenticado.
 */
export const getSuppliersId401Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Usuário não autenticado.'
  ) as unknown as ToZod<GetSuppliersId401Type>

/**
 * @description Fornecedor não encontrado.
 */
export const getSuppliersId404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Fornecedor não encontrado.'
  ) as unknown as ToZod<GetSuppliersId404Type>

export const getSuppliersIdQueryResponseSchema = z.lazy(
  () => getSuppliersId200Schema
) as unknown as ToZod<GetSuppliersIdQueryResponseType>
